;; generate bytecode
;; mkdir -p compiled
;; cd compiled
;; kl
(load-file "../S31/KLambda/toplevel.kl")
(load-file "../S31/KLambda/core.kl")
(load-file "../S31/KLambda/sys.kl")
(load-file "../S31/KLambda/sequent.kl")
(load-file "../S31/KLambda/yacc.kl")
(load-file "../S31/KLambda/reader.kl")
(load-file "../S31/KLambda/prolog.kl")
(load-file "../S31/KLambda/track.kl")
(load-file "../S31/KLambda/load.kl")
(load-file "../S31/KLambda/writer.kl")
(load-file "../S31/KLambda/macros.kl")
(load-file "../S31/KLambda/declarations.kl")
(load-file "../S31/KLambda/t-star.kl")
(load-file "../S31/KLambda/types.kl")
(shen.shen)

(load "../src/compiler.shen")
(set *maximum-print-sequence-size* 100000)
(compile-file "../S31/KLambda/sys.kl" "sys.tmp")
(compile-file "../S31/KLambda/writer.kl" "writer.tmp")
(compile-file "../S31/KLambda/core.kl" "core.tmp")
(compile-file "../S31/KLambda/reader.kl" "reader.tmp")
(compile-file "../S31/KLambda/declarations.kl" "declarations.tmp")
(compile-file "../S31/KLambda/toplevel.kl" "toplevel.tmp")
(compile-file "../S31/KLambda/macros.kl" "macros.tmp")
(compile-file "../S31/KLambda/load.kl"  "load.tmp")
(compile-file "../S31/KLambda/prolog.kl" "prolog.tmp")
(compile-file "../S31/KLambda/sequent.kl" "sequent.tmp")
(compile-file "../S31/KLambda/track.kl" "track.tmp")
(compile-file "../S31/KLambda/t-star.kl" "t-star.tmp")
(compile-file "../S31/KLambda/yacc.kl" "yacc.tmp")
(compile-file "../S31/KLambda/types.kl" "types.tmp")


;; generate go file from bytecode
(put bc->go arity 5)
(let Cg (make-code-generator)
     (do
      (bc->go Cg "SysMain" false "sys.tmp" "../cmd/shen/sys.go")
      (bc->go Cg "WriterMain" false "writer.tmp" "../cmd/shen/writer.go")
      (bc->go Cg "CoreMain" false "core.tmp" "../cmd/shen/core.go")
      (bc->go Cg "ReaderMain" false "reader.tmp" "../cmd/shen/reader.go")
      (bc->go Cg "DeclarationsMain" false "declarations.tmp" "../cmd/shen/declarations.go")
      (bc->go Cg "TopLevelMain" false "toplevel.tmp" "../cmd/shen/toplevel.go")
      (bc->go Cg "MacrosMain" false "macros.tmp" "../cmd/shen/macros.go")
      (bc->go Cg "LoadMain" false "load.tmp" "../cmd/shen/load.go")
      (bc->go Cg "PrologMain" false "prolog.tmp" "../cmd/shen/prolog.go")
      (bc->go Cg "SequentMain" false "sequent.tmp" "../cmd/shen/sequent.go")
      (bc->go Cg "TrackMain" false "track.tmp" "../cmd/shen/track.go")
      (bc->go Cg "TStarMain" false "t-star.tmp" "../cmd/shen/t-star.go")
      (bc->go Cg "YaccMain" false "yacc.tmp" "../cmd/shen/yacc.go")
      (bc->go Cg "TypesMain" true "types.tmp" "../cmd/shen/types.go")))